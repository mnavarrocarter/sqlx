name: "PHP Workflow"

on:
  workflow_dispatch:
  pull_request:
    paths: [ "**.php" ]
    branches: ["main"]
  push:
    paths: ["**.php"]
    branches: ["main"]

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress --no-suggest --ignore-platform-req=php"

jobs:
  php-code-checks:
    name: "PHP Code Quality Checks"
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        dependencies:
          - "locked"
          - "highest"
          - "lowest"
        php-version:
          - "8.0"
          - "8.1"
        operating-system:
          - "ubuntu-latest"
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"
      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          php-version: "${{ matrix.php-version }}"
          ini-values: memory_limit=-1
          tools: composer:v2
      - name: "Cache Dependencies"
        uses: "actions/cache@v2"
        with:
          path: |
            ~/.composer/cache
            vendor
          key: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}"
          restore-keys: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}"
      # Our code should work with the highest possible dependencies
      - name: "Install Highest Dependencies"
        if: ${{ matrix.dependencies == 'highest' }}
        run: "composer update ${{ env.COMPOSER_FLAGS }}"
      # Our code should work with the lowest possible dependencies
      - name: "Install Lowest Dependencies"
        if: ${{ matrix.dependencies == 'lowest' }}
        run: "composer update --prefer-lowest ${{ env.COMPOSER_FLAGS }}"
      # Our code should work with the locked dependencies
      - name: "Install Locked Dependencies"
        if: ${{ matrix.dependencies == 'locked' }}
        run: "composer install ${{ env.COMPOSER_FLAGS }}"
      # We only run code style checker on locked
      - name: "Run Code Style Checker"
        run: "vendor/bin/php-cs-fixer fix --dry-run -v"
        if: ${{ matrix.dependencies == 'locked' }}
      # We only run static analysis on locked
      - name: "Run Static Analysis"
        if: ${{ matrix.dependencies == 'locked' }}
        run: "vendor/bin/psalm --shepherd --stats"
      - name: "Run Test Suite"
        run: "vendor/bin/phpunit --exclude-group=postgres"

  postgres-tests:
    name: "Postgres Test Suite"
    runs-on: ${{ matrix.operating-system }}
    needs: php-code-checks
    env:
      PGSQL_HOST: localhost
      PGSQL_PORT: 5432
      PGSQL_USER: sqlx
      PGSQL_PASS: sqlx
      PGSQL_DBNM: sqlx
    strategy:
      matrix:
        postgres-version:
          - "14-alpine"
        php-version:
          - "8.0"
        operating-system:
          - "ubuntu-latest"
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: sqlx
          POSTGRES_PASSWORD: sqlx
          POSTGRES_DB: sqlx
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"
      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          php-version: "8.0"
          ini-values: memory_limit=-1
          tools: composer:v2
      - name: "Cache Dependencies"
        uses: "actions/cache@v2"
        with:
          path: |
            ~/.composer/cache
            vendor
          key: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}"
          restore-keys: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}"
      - name: "Install Locked Dependencies"
        run: "composer install ${{ env.COMPOSER_FLAGS }}"
      - name: "Run Postgres Test Suite"
        run: "vendor/bin/phpunit --group=postgres"
